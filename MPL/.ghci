:set -isrc
:set -fwarn-incomplete-patterns
:set -XTemplateHaskell 
:set -XDataKinds 
:set -XUndecidableInstances 
:set -XTypeFamilies 
:set -XMultiParamTypeClasses 
:set -XFlexibleInstances 
:set -XFunctionalDependencies 
:set -XDeriveGeneric 
:set -XFlexibleContexts
:set prompt "> "

import Optics
import Control.Monad.State
import Control.Monad.Writer
import Control.Monad.Reader
import Control.Monad.RWS
import Data.Maybe
import Data.Bifunctor as Bifunctor
import Control.Arrow
import Data.List
import qualified Data.List.NonEmpty as NE
import Data.List.NonEmpty (NonEmpty (..))


